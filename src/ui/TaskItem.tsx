import { useState } from 'react';
import { Task } from '../core/task';
import { useTaskStore } from '../store/useTaskStore';
import { formatDate } from '../utils/dateUtils';
import { EditTaskModal } from './EditTaskModal';

interface TaskItemProps {
  task: Task;
}

export const TaskItem = ({ task }: TaskItemProps) => {
  const [isEditing, setIsEditing] = useState(false);
  const { deleteTask, toggleStatus, editTask } = useTaskStore();

  const priorityColors = {
    high: '#ff6b6b',
    medium: '#ffd166',
    low: '#06d6a0'
  };

  const handleSave = (updatedTask: Partial<Task>) => {
    editTask(task.id, updatedTask);
  };

  return (
    <>
      <div className="task" style={{ borderLeft: `4px solid ${priorityColors[task.priority]}` }}>
        <div className="task-content">
          <div 
            className={`task-title ${task.status === 'done' ? 'completed' : ''}`}
            onClick={() => toggleStatus(task.id)}
          >
            {task.title}
          </div>
          <div className="task-meta">
            <span>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {task.priority}</span>
            <span>–í—ã–ø–æ–ª–Ω–∏—Ç—å –¥–æ: {formatDate(task.dueDate)}</span>
            {task.completedAt && (
              <span>–ó–∞–≤–µ—Ä—à–µ–Ω–æ: {formatDate(task.completedAt)}</span>
            )}
          </div>
        </div>
        <div className="task-actions">
          <button onClick={() => toggleStatus(task.id)}>
            {task.status === 'done' ? '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å' : '‚úì –í—ã–ø–æ–ª–Ω–∏—Ç—å'}
          </button>
          <button onClick={() => setIsEditing(true)}>‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
          <button onClick={() => deleteTask(task.id)}>üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
        </div>
      </div>

      {isEditing && (
        <EditTaskModal
          task={task}
          onSave={handleSave}
          onClose={() => setIsEditing(false)}
        />
      )}
    </>
  );
};